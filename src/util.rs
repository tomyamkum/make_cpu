pub fn u16_to_bool_array(a: u16) -> [bool; 16] {
    [
        (a & (1 << 0)) != 0,
        (a & (1 << 1)) != 0,
        (a & (1 << 2)) != 0,
        (a & (1 << 3)) != 0,
        (a & (1 << 4)) != 0,
        (a & (1 << 5)) != 0,
        (a & (1 << 6)) != 0,
        (a & (1 << 7)) != 0,
        (a & (1 << 8)) != 0,
        (a & (1 << 9)) != 0,
        (a & (1 << 10)) != 0,
        (a & (1 << 11)) != 0,
        (a & (1 << 12)) != 0,
        (a & (1 << 13)) != 0,
        (a & (1 << 14)) != 0,
        (a & (1 << 15)) != 0,
    ]
}

pub fn u2b(a: u16) -> [bool; 16] {
    u16_to_bool_array(a)
}

pub fn u2b15(a: u16) -> [bool; 15] {
	let mut target: [bool; 15] = [false; 15];
    target.copy_from_slice(&u2b(a)[0..15]);
    target
}
